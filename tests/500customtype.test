#!/usr/bin/env tclsh

package require fileutil

package require tcltest
namespace import tcltest::*

set testScript [file normalize [info script]]
set testDir [file dirname $testScript]

test load "Make sure it is loadable." {
    source [file dirname [file dirname $testScript]]/TclTaskRunner.tcl
} ""

#----------------------------------------
# Define custom runner type

namespace eval ::CustomRunner {
    namespace import ::TclTaskRunner::*
}
snit::type CustomRunner {
    TclTaskRunner::Macro

    method foo {} {return BAR}
}

test customtype-create "custom runner is creatable" {
    CustomRunner dep
} ::dep

test customtype-is-extended "custom runner has method foo" {
    dep foo
} BAR

#----------------------------------------

set ::env(TTR_TEST_SPEC) [list TYPE CustomRunner THEME customtype-]

foreach fn {
    100filebased.test
    200nonfiletarget.test
} {
    rename dep ""
    source $testDir/$fn
}

#----------------------------------------

set testItemDir $testDir/110tcltaskfile
set fn $testItemDir/TclTask.tcl

test customtype-tcltaskfile-run "run without arguments" {
    rename dep ""

    # Note: TclTaskRunner only takes posix style long options.
    CustomRunner toplevel --log-prefix= \
        $fn

    file exists $testItemDir/prog
} 1

test customtype-tcltaskfile-clean "run with clean" {
    rename ::dep ""

    # Note: options can be placed between taskfile and command
    CustomRunner toplevel \
        $fn \
        --log-prefix= \
        clean

    file exists $testItemDir/prog
} 0

cleanupTests
